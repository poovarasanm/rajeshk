{"version":3,"sources":["serviceWorker.js","components/Header/Header.js","components/Home/Home.js","components/Footer/Footer.js","components/Aboutus/Aboutus.js","components/Contactus/Contactus.js","components/Products/Products.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","Header","Navbar","bg","expand","variant","Container","Brand","to","Toggle","aria-controls","Collapse","id","Nav","className","Home","Row","Col","sm","alt","Footer","href","Aboutus","Contactus","Products","NoMatch","useLocation","pathname","App","basename","path","exact","component","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0PAYoBA,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,oDCOSC,EArBA,WACX,OACI,kBAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKC,QAAQ,QAClC,kBAACC,EAAA,EAAD,KACI,kBAACJ,EAAA,EAAOK,MAAR,KACI,kBAAC,IAAD,CAASC,GAAG,KAAZ,WAEJ,kBAACN,EAAA,EAAOO,OAAR,CAAeC,gBAAc,qBAC7B,kBAACR,EAAA,EAAOS,SAAR,CAAiBC,GAAG,oBAChB,kBAACC,EAAA,EAAD,CAAKC,UAAU,gBACX,kBAAC,IAAD,CAASA,UAAU,WAAWN,GAAG,KAAjC,QACA,kBAAC,IAAD,CAASM,UAAU,WAAWN,GAAG,aAAjC,YACA,kBAAC,IAAD,CAASM,UAAU,WAAWN,GAAG,YAAjC,YACA,kBAAC,IAAD,CAASM,UAAU,WAAWN,GAAG,cAAjC,mB,gBCYTO,G,MAzBF,WACT,OACI,6BAASH,GAAG,QACR,kBAACI,EAAA,EAAD,CAAKF,UAAU,UACX,kBAACG,EAAA,EAAD,CAAKC,GAAG,IAAIJ,UAAU,IAClB,gEAEJ,kBAACG,EAAA,EAAD,CAAKC,GAAG,KACJ,yBAAKC,IAAI,aAGjB,kBAACH,EAAA,EAAD,CAAKF,UAAU,SACX,kBAACG,EAAA,EAAD,CAAKC,GAAG,IAAIJ,UAAU,SAEtB,kBAACG,EAAA,EAAD,CAAKC,GAAG,MAER,kBAACD,EAAA,EAAD,CAAKC,GAAG,MAER,kBAACD,EAAA,EAAD,CAAKC,GAAG,IAAIJ,UAAU,aCGvBM,EAtBA,WACX,OACI,6BAASR,GAAG,UACR,kBAACN,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAKC,GAAG,KAAR,qBACA,kBAACD,EAAA,EAAD,CAAKC,GAAG,KACJ,wBAAIJ,UAAU,8BACV,wBAAIA,UAAU,iBACV,uBAAGO,KAAK,KAAR,aAEJ,wBAAIP,UAAU,iBACV,uBAAGO,KAAK,KAAR,oBCbjB,SAASC,IACpB,OACI,gDCFO,SAASC,IACpB,OACI,kDCFO,SAASC,IACpB,OACI,qDCOR,IAAMC,EAAU,WACd,IAAI3B,EAAW4B,cACf,OACE,yBAAKZ,UAAU,OACb,4CACe,8BAAOhB,EAAS6B,aA4BtBC,MAtBf,WACE,OACE,yBAAKd,UAAU,OACb,yBAAKF,GAAG,gBACN,kBAAC,IAAD,CAAeiB,SAAS,KACtB,kBAAC,EAAD,MACA,kBAACvB,EAAA,EAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOwB,KAAK,IAAIC,OAAK,EAACC,UAAWjB,IACjC,kBAAC,IAAD,CAAOe,KAAK,WAAWE,UAAWV,IAClC,kBAAC,IAAD,CAAOQ,KAAK,YAAYE,UAAWR,IACnC,kBAAC,IAAD,CAAOM,KAAK,aAAaE,UAAWT,IACpC,kBAAC,IAAD,CAAOO,KAAK,KAAI,kBAAC,EAAD,WAKxB,kBAAC,EAAD,QCjCNG,IAASC,OAAO,kBAAC,EAAD,MAAaC,SAASC,eAAe,SR6H/C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b1c3a935.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport { Container, Navbar, Nav } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nconst Header = () => {\n    return (\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\n            <Container>\n                <Navbar.Brand>\n                    <NavLink to=\"/\">MySite</NavLink>\n                </Navbar.Brand>\n                <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n                <Navbar.Collapse id=\"basic-navbar-nav\">\n                    <Nav className=\"mr-0 ml-auto\">\n                        <NavLink className=\"nav-link\" to=\"/\">Home</NavLink>\n                        <NavLink className=\"nav-link\" to=\"/products\">Products</NavLink>\n                        <NavLink className=\"nav-link\" to=\"/aboutus\">About us</NavLink>\n                        <NavLink className=\"nav-link\" to=\"/contactus\">Contact us</NavLink>\n                    </Nav>\n                </Navbar.Collapse>\n            </Container>\n        </Navbar>\n    )\n}\n\nexport default Header","import React from 'react'\nimport { Row, Col } from 'react-bootstrap'\nimport './index.scss'\n\nconst Home = () => {\n    return (\n        <section id=\"home\">\n            <Row className=\"banner\">\n                <Col sm=\"8\" className=\"\">\n                    <h3>Some banner text coming here...</h3>\n                </Col>\n                <Col sm=\"4\">\n                    <img alt=\"banner\" />\n                </Col>\n            </Row>\n            <Row className=\"boxes\">\n                <Col sm=\"3\" className=\"ml-0\">\n                </Col>\n                <Col sm=\"3\">\n                </Col>\n                <Col sm=\"3\">\n                </Col>\n                <Col sm=\"3\" className=\"mr-0\">\n                </Col>\n            </Row>\n        </section>\n    )\n}\n\nexport default Home","import React from 'react'\nimport { Row, Col, Container } from 'react-bootstrap'\n\nconst Footer = () => {\n    return (\n        <section id=\"footer\">\n            <Container>\n                <Row>\n                    <Col sm=\"6\"> &copy;MySite 2020 </Col>\n                    <Col sm=\"6\">\n                        <ul className=\"d-flex justify-content-end\">\n                            <li className=\"d-inline mr-2\">\n                                <a href=\"#\">Facebook</a>\n                            </li>\n                            <li className=\"d-inline mr-2\">\n                                <a href=\"#\">Instagram</a>\n                            </li>\n                        </ul>\n                    </Col>\n                </Row>\n            </Container>\n        </section>\n    )\n}\n\nexport default Footer","import React from 'react'\n\nexport default function Aboutus() {\n    return (\n        <section>\n            About us...\n        </section>\n    )\n}","import React from 'react'\n\nexport default function Contactus() {\n    return (\n        <section>\n            Contact us...\n        </section>\n    )\n}","import React from 'react'\n\nexport default function Products() {\n    return (\n        <section>\n            Products list...\n        </section>\n    )\n}","import React from 'react';\nimport { BrowserRouter, Switch, Route, useLocation } from 'react-router-dom'\nimport { Container } from 'react-bootstrap'\nimport './App.scss';\nimport Header from './components/Header/Header';\nimport Home from './components/Home/Home';\nimport Footer from './components/Footer/Footer';\nimport Aboutus from './components/Aboutus/Aboutus';\nimport Contactus from './components/Contactus/Contactus';\nimport Products from './components/Products/Products';\n\nconst NoMatch = () => {\n  let location = useLocation()\n  return (\n    <div className=\"m-2\">\n      <h3>\n        No match for <code>{location.pathname}</code>\n      </h3>\n    </div>\n  );\n}\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"page-wrapper\">\n        <BrowserRouter basename=\"/\">\n          <Header></Header>\n          <Container>\n            <Switch>\n              <Route path=\"/\" exact component={Home}></Route>\n              <Route path=\"/aboutus\" component={Aboutus}></Route>\n              <Route path=\"/products\" component={Products}></Route>\n              <Route path=\"/contactus\" component={Contactus}></Route>\n              <Route path=\"*\"><NoMatch /></Route>\n            </Switch>\n          </Container>\n        </BrowserRouter>\n      </div>\n      <Footer></Footer>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport * as serviceWorker from './serviceWorker'\nimport App from './App'\n\nReactDOM.render(<App></App>, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}